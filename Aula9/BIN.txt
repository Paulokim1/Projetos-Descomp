tmp(0) := "0100" & '0' & x"01";    	-- LDI $1 	#Carrega o acumulador com o valor 0
tmp(1) := "0101" & '1' & x"00";    	-- STA @256 	#Armazena o valor do bit0 do acumulador no LDR0 ~ LEDR7
tmp(2) := "0101" & '1' & x"01";    	-- STA @257 	#Armazena o valor do bit0 do acumulador no LDR8
tmp(3) := "0101" & '1' & x"02";    	-- STA @258 	#Armazena o valor do bit0 do acumulador no LDR9
tmp(4) := "0101" & '1' & x"20";    	-- STA @288 	#Armazena o valor do acumulador em HEX0
tmp(5) := "0101" & '1' & x"21";    	-- STA @289 	#Armazena o valor do acumulador em HEX1
tmp(6) := "0101" & '1' & x"22";    	-- STA @290 	#Armazena o valor do acumulador em HEX2
tmp(7) := "0101" & '1' & x"23";    	-- STA @291 	#Armazena o valor do acumulador em HEX3
tmp(8) := "0101" & '1' & x"24";    	-- STA @292 	#Armazena o valor do acumulador em HEX4
tmp(9) := "0101" & '1' & x"25";    	-- STA @293 	#Armazena o valor do acumulador em HEX5
tmp(10) := "0101" & '0' & x"00";   	-- STA @0 	#Armazena o valor do acumulador em MEM[0]
tmp(11) := "0101" & '0' & x"01";   	-- STA @1		#Armazena o valor do acumulador em MEM[1]
tmp(12) := "0101" & '0' & x"02";   	-- STA @2		#Armazena o valor do acumulador em MEM[2]
tmp(13) := "0101" & '0' & x"03";   	-- STA @3 	#Armazena o valor do acumulador em MEM[3]
tmp(14) := "0101" & '0' & x"04";   	-- STA @4 	#Armazena o valor do acumulador em MEM[4]
tmp(15) := "0101" & '0' & x"05";   	-- STA @5 	#Armazena o valor do acumulador em MEM[5]
tmp(16) := "0100" & '0' & x"09";   	-- LDI $9 	#Carrega no acumulador o valor 9
tmp(17) := "0101" & '0' & x"0A";   	-- STA @10 	#Armazena o valor do acumulador em MEM[10] (LIMITE UNIDADE)
tmp(18) := "0101" & '0' & x"0B";   	-- STA @11 	#Armazena o valor do acumulador em MEM[11] (LIMITE DEZENA)
tmp(19) := "0101" & '0' & x"0C";   	-- STA @12 	#Armazena o valor do acumulador em MEM[12] (LIMITE CENTENA)
tmp(20) := "0101" & '0' & x"0D";   	-- STA @13 	#Armazena o valor do acumulador em MEM[13] (LIMITE MILHAR)
tmp(21) := "0101" & '0' & x"0E";   	-- STA @14 	#Armazena o valor do acumulador em MEM[14] (LIMITE DEZENA DE MILHAR)
tmp(22) := "0101" & '0' & x"0F";   	-- STA @15 	#Armazena o valor do acumulador em MEM[15] (LIMITE CENTENA DE MILHAR)
tmp(23) := "0100" & '0' & x"00";   	-- LDI $0 	#Carrega o valor 0 para fazer comparações
tmp(24) := "0101" & '0' & x"06";   	-- STA @6 	#Armazena o valor do acumulador em MEM[6]
tmp(25) := "0100" & '0' & x"01";   	-- LDI $1 	#Carrega o valor 1 para fazer incrementos
tmp(26) := "0101" & '0' & x"07";   	-- STA @7 	#Armazena o valor do acumulador em MEM[7]
tmp(27) := "0100" & '0' & x"0A";   	-- LDI $10 	#Carrega o valor 10 para fazer comparações de limite
tmp(28) := "0101" & '0' & x"08";   	-- STA @8 	#Armazena o valor do acumulador em MEM[8]
tmp(29) := "0100" & '0' & x"00";   	-- LDI $0 	#Carrega o valor 0 para FLAG INIBIR CONTAGEM
tmp(30) := "0101" & '0' & x"09";   	-- STA @9 	#Armazena o valor do acumulador em MEM[9]
tmp(31) := "0101" & '0' & x"0A";   	-- STA @10 	#Armazena o valor do acumulador em MEM[9]
tmp(32) := "0101" & '0' & x"0B";   	-- STA @11 	#Armazena o valor do acumulador em MEM[9]
tmp(33) := "0000" & '0' & x"00";   	-- NOP 	# LOOP PRINCIPAL
tmp(34) := "0001" & '1' & x"63";   	-- LDA @355 	#Carrega o acumulador com a leitura do botão KEY3
tmp(35) := "1000" & '0' & x"07";   	-- CEQ @7 	#Compara o valor de KEY3 com o valor 1
tmp(36) := "0111" & '0' & x"29";   	-- JEQ @DEF_LIMITE 	#Jump para a linha da subrotina de definição de limite
tmp(37) := "0001" & '1' & x"62";   	-- LDA @354 	#Carrega o acumulador com a leitura do botão KEY2
tmp(38) := "1000" & '0' & x"07";   	-- CEQ @7 	#Compara o valor de KEY2 com o valor 1
tmp(39) := "0111" & '0' & x"2D";   	-- JEQ @INCREMENTA 	#Jump para a linha da subrotina de incremento
tmp(40) := "0110" & '0' & x"21";   	-- JMP @MAIN_LOOP
tmp(41) := "0000" & '0' & x"00";   	-- NOP 	# DEF_LIMITE
tmp(42) := "0001" & '0' & x"07";   	-- LDA @7 	#Carrega o valor 1
tmp(43) := "0101" & '1' & x"02";   	-- STA @258 	#Armazena o valor 1 no LEDR9
tmp(44) := "0110" & '0' & x"29";   	-- JMP @DEF_LIMITE
tmp(45) := "0000" & '0' & x"00";   	-- NOP 	# INCREMENTA
tmp(46) := "0001" & '0' & x"07";   	-- LDA @7 	#Carrega o valor 1
tmp(47) := "0101" & '1' & x"01";   	-- STA @257 	#Armazena o valor 1 no LEDR8
tmp(48) := "0110" & '0' & x"2D";   	-- JMP @INCREMENTA
